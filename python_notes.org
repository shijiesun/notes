#+STARTUP: content
#+TITLE: python notes
#+AUTHOR:      孙士杰
#+DATE:       <2018-05-17 Thu>
#+EMAIL:       sun.shijie5@ztesoft.com

* 类型
动态类型  强类型
变量无类型约束
对象本身带有类型描述和引用计数器
共享引用,多个变量引用同一个对象

#+BEGIN_SRC python
  x = "tom"
  y = "tom"
  id(x)
  id(y)

  a is b  //判断是否是同一个对象
#+END_SRC

0 - 255 的值都已经缓存起来了
小型的字符串也缓存起来了

* 内置核心数据类型
尽量不要自定义类型
内置类型效率更高

* 数值
** int
没有长度限制,可以处理非常大的数字
0b1 0o7 0x7ff
** float
3.14e5
** 运算符

#+BEGIN_SRC python
  ** 计算次方
  // 整除

21 // 7    3
21 / 7     3.0
#+END_SRC
** 常用函数

#+BEGIN_SRC python
  10 + int("30")
  10 + int("1101", 2) //转换成2进制
  float("3.13") * 2
  bin(10) //0b11  转换成2进制
  hex(10)
  oct(10)
#+END_SRC

** 工具模块

#+BEGIN_SRC python
  import math

  x = 22 / 7
  math.floor(x)  //向下取值

  math.trunc(3.14)  //向0取值

  math.ceil(3.14) //向上取值

  round(3.14) //四舍五入
#+END_SRC


#+BEGIN_SRC python
  import decimal

  0.1 + 0.1 + 0.1 - 0.3  //结果不对
  decimal.Decimal(0.1) + decimal.Decimal(0.1) + decimal.Decimal(0.1) - decimal.Decimal(0.3) // error
  decimal.Decimal('0.1') + decimal.Decimal('0.1') + decimal.Decimal('0.1') - decimal.Decimal('0.3')
#+END_SRC

* 序列
** 可变序列
*** list
1. 可包含任意对象的有序集合
2. 可变长度,异质,可任意嵌套
3. 支持原位改变
4. 对象引用数组

#+BEGIN_SRC python
  scores = [80, 90, 90.3. "tom"]

  scores[-1]

  scores[0:2]

  scores.append(79)

  x = [1, 2, 3]

  scores.append(x)

  scores[0] = 85.2
#+END_SRC

*** 通用操作
改变某个元素的值 s[i] = x
改变特定范围内的元素值 s[i:j] = t
按照特定步长值改变 s[i:j:k] = t
删除元素 del s[i]  删除单个,范围,步长
s.remove(x) //只删除第一个匹配的值
清空 s.clear()
追加元素  s.append(x)
扩展元素  s.extend(t)
插入元素  s.insert(i, x)
检索并删除特定元素  s.pop() s.pop(i)
反转  s.reverse()
复制内容  s = l[:]  s = l.copy()
排序 s.sort()

#+BEGIN_SRC python
  s = list(range(1, 11))

  s[0] = 99

   s[:3] = 100 //error

   s[:3] = [98, 99, 100]

   s[:3] = [98, 99, 100, 101, 102] //可以数量更多

   s[1:5] = [999] //可以更少

   l = list(range(1, 11))

   l[::2] = [99, 99, 99, 99, 99] //个数必须相同

   del l[0]

   del l[:3]

   del l[::2]

   l[:3] = [] //也可以做删除

   l.remove(2)

   l.extend([9, 10]);

   l.insert(3, 100);

   l[2:2] = 101;

   s = l; //共享引用
   s = l[:];  //复制内容
   s = l.copy();

   people.sort(key=lambda x:x[-1])

   score.sort(reverse=True)

   temp = sorted(score)

   sorted(people, key=lambda n:n[1])

#+END_SRC

** 不可变序列
*** tuple
固定长度

#+BEGIN_SRC python
  t = ();
  t = (1, 3, 3)
  t = (1, 2, 3, (99, 100), "tom")

  t = ('jerry') //error 声明了一个str
  t = ('jerry',) //只有一个元素,需要在声明的后面加上一个,

  t2 = 1, 2, 3 //也可以声明一个元组
  t2 = 'jerry', //可以不加括号

  t3 = tuple(range(1, 6))

  t3[0:2]

  t = t + t1

  a, b = 5, 10

  a, b = b, a //交换
#+END_SRC
*** range
#+BEGIN_SRC python
range(4)
range(1,3)
range(1, 11, 2)

  for i in range(4):
      print("hello" + str(i))
#+END_SRC

*** 字符串 str
1. 特性
可用单引号或双引号,无区别
三引号 多行字符串

#+BEGIN_SRC python
  path = r"C:\abc\tag" //不解析转义字符
  path = "C:\\abc\\tag"
  path = b'abc' //以字节的方式声明字符串

  s = '优品课堂'.encode()
  s.decode()

  s = 'abcd'

  'c' in s


#+END_SRC
2. 常用操作
不可原位改变,只能用方法返回给一个新的字符串

str.replace(old, new, n)

#+BEGIN_SRC python
  s = 'aaaaa'

  s.replace('a', 'b') //bbbbb

  s.replace('a', 'b', 2) //aabbb

  s.captalize()

  s.upper()

  s.lower()

  s.startswith()

  s.endswith()

  s = 'www.abc.com'

  l =   s.split('.')

  ':'.join(l)

  name = 'tom'
  age = 20
  job = 'Dev'

  '姓名:{0} 年龄:[1] 工作:{2}'.format(name, age, job)

  '姓名:{0} 年龄:[1] 工作:{2} 部门:{department}'.format(name, age, job, department='tech')

  '[0] = {1}'.format('abc', 124.344)

  '{0:10} = {1:12}'.format('abc', 123.344)  //占位宽度

  '{0:<10} = {1:>12}'.format('abc', 123.344) //左对齐 右对齐

  pi = 3.14159
  '{.f} {.2f} {06.2f}'.format(pi, pi,pi) //浮点数格式

#+END_SRC



** 通用操作
判断元素时否在序列之内 x in s  x not in s
连接序列  x + y
重复序列元素  x * n
下标取值 s[i]
访问指定索引范围s[m:n] 前开后闭 可以用负数
指定步长 s[i:j:n]
获取序列长度 len(s)
min(s) max(s) sum(s) count(s)
检索元素第一次出现位置的下标 s.index(x)

#+BEGIN_SRC python
  x = [1, 2, 3]

  name = list('abcd')

  range(5)

  list(range(5))  // 0, 1, 2, 3, 4

  scores = [80, 90, 90.3]

  88 in scores

  101 not in scores

  x + scores //连接序列

  [3] * 4 // [3, 3, 3, 3]

  score[-1]
  score[-2]

  x[0:2] // [1, 2]

  x[:2] // [1, 2]

  x[1:] // [2, 3]

  x{:}  //all

  x[::2] // [1, 3]

  len(x)

  min(x)

  x.index(2)

  l = [1,2,2,2,3]

  l.count(2) // 3
#+END_SRC

* 集合
* 映射
* 程序单元类型
* 其他
#+BEGIN_SRC python
  type(8)

  x is None
#+END_SRC
** 类型对象
type(obj)

** 空对象
None
** 布尔
本质上True 对应int 1,False 对应int 0, 但仍然可以转换

真值测试: 0, 0.0 None,空对象,空字符串,空映射等转换成False,其他都是True
#+BEGIN_SRC python
  bool(3)  True

  bool(-3) True
#+END_SRC
