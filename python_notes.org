* 类型
动态类型  强类型
变量无类型约束
对象本身带有类型描述和引用计数器
共享引用,多个变量引用同一个对象

#+BEGIN_SRC python
  x = "tom"
  y = "tom"
  id(x)
  id(y)

  a is b  //判断是否是同一个对象
#+END_SRC

0 - 255 的值都已经缓存起来了
小型的字符串也缓存起来了

* 内置核心数据类型
尽量不要自定义类型
内置类型效率更高



** 数值
*** int
没有长度限制,可以处理非常大的数字
0b1 0o7 0x7ff
*** float
3.14e5
*** 运算符

#+BEGIN_SRC python
  ** 计算次方
  // 整除

21 // 7    3
21 / 7     3.0
#+END_SRC
*** 常用函数

#+BEGIN_SRC python
  10 + int("30")
  10 + int("1101", 2) //转换成2进制
  float("3.13") * 2
  bin(10) //0b11  转换成2进制
  hex(10)
  oct(10)
#+END_SRC

*** 工具模块

#+BEGIN_SRC python
  import math

  x = 22 / 7
  math.floor(x)  //向下取值

  math.trunc(3.14)  //向0取值

  math.ceil(3.14) //向上取值

  round(3.14) //四舍五入
#+END_SRC

** 序列
** 集合
** 映射
** 程序单元类型
** 其他
#+BEGIN_SRC python
  type(8)

  x is None
#+END_SRC
*** 类型对象
type(obj)

*** 空对象
None
*** 布尔
bool
